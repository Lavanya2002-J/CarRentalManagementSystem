@model LoginViewModel
@{
    ViewData["Title"] = "Customer Sign In";
    // This view now integrates with your main _Layout.cshtml, just like the dashboard.
}

<link rel="stylesheet" href="~/css/CDB.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/C.Login.css" asp-append-version="true" />


<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">

            <div class="glass-effect p-4 p-md-5 rounded-3">
                <div class="glass-effect p-4 p-md-5 rounded-3">

                    <h1 class="company-logo text-center">
                        UnicomTIC Travels
                    </h1>
                </div>
               
                <div class="login-header text-center">
                    <h2 class="h2 mb-4">Login In to Your Account</h2>
                </div>
                <div id="live-datetime" class="alert alert-info bg-transparent border-info text-info small p-2 text-center mb-4">
                </div>


                <form asp-action="CustomerLogin" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="form-floating mb-3">
                        <input asp-for="UsernameOrEmail" class="form-control" placeholder="Username or Email" />
                        <label asp-for="UsernameOrEmail">Username or Email</label>
                        <span asp-validation-for="UsernameOrEmail" class="text-danger"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <input asp-for="Password" class="form-control" placeholder="Password" />
                        <label asp-for="Password"></label>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="rememberMeCheck">
                            <label class="form-check-label" for="rememberMeCheck">
                                Remember me
                            </label>
                        </div>
                        <a href="#" class="forgot-password">Forgot password?</a>
                    </div>

                    <div class="d-grid">
                        <input type="submit" value="Login" class="btn btn-primary" />
                    </div>
                </form>

                <div class="login-footer text-center mt-4">
                    <a asp-controller="Account" asp-action="Register">Don't have an account? <strong> Register Your Account</strong></a>
                </div>
            </div>

        </div>
    </div>
</div>

<script>
    // This function gets the current time and formats it
    function updateLiveTime() {
        const dateTimeElement = document.getElementById('live-datetime');

        // Make sure the element exists before trying to update it
        if (dateTimeElement) {
            const now = new Date();

            // Options to format the date and time for Sri Lanka
            const options = {
                weekday: 'long',    // e.g., "Wednesday"
                hour: 'numeric',      // e.g., "1"
                minute: 'numeric',    // e.g., "50"
                second: 'numeric',    // e.g., "30"
                hour12: true,       // Use 12-hour format (AM/PM)
                timeZone: 'Asia/Colombo', // Set the timezone to Sri Lanka
                timeZoneName: 'short' // Optional: e.g., "GMT+5:30"
            };

            // Create the formatted string
            const formattedDateTime = new Intl.DateTimeFormat('en-US', options).format(now);

            // Update the HTML content
            dateTimeElement.innerHTML = `Good day! It's currently ${formattedDateTime} in Sri Lanka.`;
        }
    }

    // Run the function once immediately on page load
    updateLiveTime();

    // Set the function to run every second (1000 milliseconds)
    setInterval(updateLiveTime, 1000);
</script>
@section Scripts {
    @{
        // This section now only includes scripts relevant to this page's form validation.
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}